name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      data-ingestion:
        image: data-ingestion-service
        ports:
          - 5000:5000
      bot-detection:
        image: bot-detection-service
        ports:
          - 5001:5001

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 3: Сборка Docker-образов
      - name: Build Docker images
        run: |
          docker build -t data-ingestion-service ./data-ingestion-service
          docker build -t bot-detection-service ./bot-detection-service

      # Шаг 4: Запуск сервисов (используем Docker Run)
      - name: Start services
        run: |
          docker run -d --name data-ingestion -p 5000:5000 data-ingestion-service
          docker run -d --name bot-detection -p 5001:5001 bot-detection-service

      # Шаг 5: Ждем, пока сервисы запустятся
      - name: Wait for services to start
        run: |
          echo "Waiting for services to start..."
          sleep 10

      # Шаг 6: Запуск интеграционных тестов
      - name: Run integration tests
        run: |
          python -m unittest discover tests

      # Шаг 7: Остановка контейнеров после тестов
      - name: Stop services
        if: always()
        run: |
          docker stop data-ingestion bot-detection || true
          docker rm data-ingestion bot-detection || true

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Вход в Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Шаг 2: Публикация Docker-образов
      - name: Push Docker images to Docker Hub
        run: |
          docker tag data-ingestion-service ${{ secrets.DOCKERHUB_USERNAME }}/data-ingestion-service:latest
          docker tag bot-detection-service ${{ secrets.DOCKERHUB_USERNAME }}/bot-detection-service:latest

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/data-ingestion-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bot-detection-service:latest